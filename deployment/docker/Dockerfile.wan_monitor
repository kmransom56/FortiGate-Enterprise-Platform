# WAN Monitor Dockerfile for FortiGate Network Monitoring
FROM python:3.12-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    UV_VERSION=0.1.19

# Create non-root user
RUN groupadd -r monitor && useradd -r -g monitor monitor

# Install dependencies and uv
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    iputils-ping \
    net-tools \
    && curl -Ls https://astral.sh/uv/install.sh | sh \
    && mv ~/.local/bin/uv /usr/local/bin/uv \
    && chmod +x /usr/local/bin/uv \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements file first (for better caching)
COPY requirements.txt ./

# Install dependencies
RUN uv pip install --no-cache-dir --system -r requirements.txt

# Copy WAN monitor specific code
COPY wan_monitor ./wan_monitor
COPY tools ./tools
COPY scripts ./scripts

# Copy secrets (should be mounted as volumes in production)
COPY secrets ./secrets

# Change ownership to non-root user
RUN chown -R monitor:monitor /app

# Switch to non-root user
USER monitor

# Add health check
HEALTHCHECK --interval=60s --timeout=30s --start-period=10s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8001/health')" || exit 1

# Command to run the WAN monitor service
CMD ["python", "-m", "wan_monitor.main"]
